openapi: 3.1.0
info:
  title: Confsearch API
  version: 1.0.3

paths:
  /api/v1/search:
    get:
      summary: Search for conferences
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/v1/events:
    get:
      summary: Get all events
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventWithTracksListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      summary: Create a new event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventWithTracks'
      responses:
        '201':
          description: Event created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventWithTracksResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/events/{eventId}:
    get:
      summary: Get an event by ID
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventWithTracksResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Update an event
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventWithTracks'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventWithTracksResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Delete an event
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/conferences:
    get:
      summary: Get all conferences with their associated events
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceWithEventsListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      summary: Create a new conference
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Conference'
      responses:
        '201':
          description: Conference created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/v1/conferences/{conferenceId}:
    get:
      summary: Get a conference by ID with associated events and event tracks
      parameters:
        - name: conferenceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceWithEventsAndTracksResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Update a conference
      parameters:
        - name: conferenceId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Conference'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Delete a conference
      parameters:
        - name: conferenceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    SuccessResponse:
      type: object
      properties:
        data:
          type: object
        error:
          type: 'null'

    ConferenceResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Conference'
        error:
          type: 'null'

    ConferenceListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Conference'
        error:
          type: 'null'

    EventWithTracksResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EventWithTracks'
        error:
          type: 'null'

    EventWithTracksListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EventWithTracks'
        error:
          type: 'null'

    ConferenceWithEventsListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ConferenceWithEvents'
        error:
          type: 'null'

    ConferenceWithEventsAndTracksResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ConferenceWithEventsAndTracks'
        error:
          type: 'null'

    ErrorResponse:
      type: object
      properties:
        data:
          type: 'null'
        error:
          type: object
          properties:
            message:
              type: string
            code:
              type: integer

    Conference:
      type: object
      properties:
        id:
          type: integer
          x-faker: 
            datatype.number:
              min: 1
              max: 20
        title:
          type: string
          x-faker: person.lastName
        acronym:
          type: string
          x-faker: person.lastName
        core_rank:
          type: string
          x-faker: string.alpha
        rank_source:
          type: string
          x-faker: internet.url
        wikicfp_url:
          type: string
          x-faker: internet.url
        website:
          type: string
          x-faker: internet.url

    Event:
      type: object
      properties:
        id:
          type: integer
          x-faker: 
             datatype.number:
              min: 1
              max: 20
        title:
          type: string
          x-faker: person.lastName
        conference:
          type: string
          x-faker: person.lastName
        acronym:
          type: string
          x-faker: person.lastName
        start:
          type: string
          format: date
          x-faker: date.anytime
        end:
          type: string
          format: date
          x-faker: date.anytime
        categories:
          type: array
          items:
            type: string
            x-faker: person.lastName
        tags:
          type: array
          items:
            type: string
            x-faker: person.lastName
        description:
          type: string
          x-faker: commerce.productDescription
        paper_submission:
          type: string
          format: date-time
          x-faker: date.anytime
        abstract_submission:
          type: string
          format: date-time
          x-faker: date.anytime
        notification_due:
          type: string
          format: date-time
          x-faker: date.anytime
        final_due:
          type: string
          format: date-time
          x-faker: date.anytime
        camera_ready:
          type: string
          format: date-time
          x-faker: date.anytime
        deadline_notes:
          type: string
          x-faker: commerce.productDescription
        wikicfp_url:
          type: string
          x-faker: internet.url
        event_url:
          type: string
          x-faker: internet.url
        submission_url:
          type: string
          x-faker: internet.url
        location:
          type: string
          x-faker: location.city

    EventTrack:
      type: object
      properties:
        id:
          type: integer
          x-faker: 
            datatype.number:
              min: 1
              max: 20
        event_id:
          type: integer
          x-faker: 
            datatype.number:
              min: 1
              max: 20
        name:
          type: string
          x-faker: person.lastName
        description:
          type: string
          x-faker: commerce.productDescription
        paper_submission:
          type: string
          format: date-time
          x-faker: date.anytime
        abstract_submission:
          type: string
          format: date-time
          x-faker: date.anytime
        notification_due:
          type: string
          format: date-time
          x-faker: date.anytime
        camera_ready_due:
          type: string
          format: date-time
          x-faker: date.anytime
        deadlines_note:
          type: string
          x-faker: commerce.productDescription
          
    EventWithTracks:
      type: object
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          properties:
            tracks:
              type: array
              x-count: 5
              items:
                $ref: '#/components/schemas/EventTrack'

    ConferenceWithEvents:
      type: object
      allOf:
        - $ref: '#/components/schemas/Conference'
        - type: object
          properties:
            events:
              type: array
              x-count: 2
              items:
                $ref: '#/components/schemas/Event'

    ConferenceWithEventsAndTracks:
      type: object
      allOf:
        - $ref: '#/components/schemas/Conference'
        - type: object
          properties:
            events:
              type: array
              x-count: 20
              items:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Event'
                  - type: object
                    properties:
                      tracks:
                        type: array
                        x-count: 3
                        items:
                          $ref: '#/components/schemas/EventTrack'

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'