version: '3.8'

services:
  nginx:
    build:
      context: .
      dockerfile: ngnix.dockerfile
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./deployment.sh:/usr/local/bin/deployment.sh
    environment:
      - DEPLOY_USER=${DEPLOY_USER}
      - DEPLOY_PASS=${DEPLOY_PASS}
    command: sh -c "htpasswd -bc /etc/nginx/auth/.htpasswd $${DEPLOY_USER} $${DEPLOY_PASS} && chmod +x /usr/local/bin/deployment.sh && nginx -g 'daemon off;'"
    depends_on:
      - app
    networks:
      - app-network

  app:
    build:
      context: ../backend
      dockerfile: Dockerfile
    expose:
      - "8080"
    environment:
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
    depends_on:
      - db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/api/v1/health" ]
      interval: 10s
      timeout: 50s
      retries: 3
    networks:
      - app-network

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: