user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load Lua module
load_module modules/ngx_http_lua_module.so;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    # Lua settings
    lua_package_path "/etc/nginx/lua/?.lua;;";

    server {
        listen 80;
        server_name dev.confsearch.ethz.ch;

        # Route /api requests to the app
        location /api/ {
            proxy_pass http://app:8080/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Deployment endpoint
        location = /deploy {
            auth_basic "Restricted Access";
            auth_basic_user_file /etc/nginx/auth/.htpasswd;

            if ($request_method = POST) {
                content_by_lua_block {
                    local handle = io.popen("./deployment.sh")
                    local result = handle:read("*a")
                    handle:close()
                    ngx.say(result)
                }
            }
            return 404;
        }
    }
}